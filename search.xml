<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>IDM下载神器 终极指南</title>
      <link href="/2025/02/08/IDM%E4%B8%8B%E8%BD%BD%E7%A5%9E%E5%A5%87%E7%BB%88%E6%9E%81%E6%8C%87%E5%8D%97/"/>
      <url>/2025/02/08/IDM%E4%B8%8B%E8%BD%BD%E7%A5%9E%E5%A5%87%E7%BB%88%E6%9E%81%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<h1 id="IDM-下载神器-无限试用终极指南"><a href="#IDM-下载神器-无限试用终极指南" class="headerlink" title="IDM 下载神器 无限试用终极指南"></a>IDM 下载神器 无限试用终极指南</h1><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><blockquote><p>Internet Download Manager （IDM） 是一种下载加速器，下载引擎使用独特的算法以最快的方式接收 Internet 数据。由于其创新的动态文件分段技术，IDM 将始终加速下载。 与其他下载管理器和加速器不同，IDM 在下载过程中对下载的文件进行动态分段，并且它重用可用连接，以实现最佳的加速性能。</p></blockquote><h2 id="1-安装IDM"><a href="#1-安装IDM" class="headerlink" title="1.安装IDM"></a>1.安装IDM</h2><p>安装<a href="https://www.internetdownloadmanager.com/"><strong>Install Internet Download （IDM）</strong></a></p><blockquote><p>语言设置：打开idm后点依次点击  “view”——“language”——“简体中文”</p></blockquote><p>IDM 无缝集成到 Google Chrome、FireFox、Microsoft Edge及其他流行的浏览器中。需要始终在浏览器中安装并启用 IDM 扩展，以接管从浏览器下载的命令。</p><blockquote><h4 id="安装浏览器扩展"><a href="#安装浏览器扩展" class="headerlink" title="安装浏览器扩展:"></a>安装浏览器扩展:</h4><p>安装IDM扩展 适用于 <a href="https://chrome.google.com/webstore/detail/IDM-Integration-Module/ngpampappnmepgilojfohadhhmbhlaek">Google Chrome</a><br>安装IDM扩展 适用于 <a href="https://microsoftedge.microsoft.com/addons/detail/idm-integration-module/llbjbkhnmlidjebalopleeepgdfgcpec">Microsoft Edge</a><br>安装IDM扩展 适用于 <a href="https://www.internetdownloadmanager.com/support/installffextfrommozillasite.html">Mozilla Firefox</a></p></blockquote><h2 id="2-无限测试脚本"><a href="#2-无限测试脚本" class="headerlink" title="2.无限测试脚本"></a>2.无限测试脚本</h2><p>通过Github官网搜索<a href="https://github.com/lstprjct/IDM-Activation-Script">“IDM Activation Script”</a><br>滚动网页找到如下图标出的代码：</p><blockquote><p><img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/idm02_22-58-07.png"><br>     即以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iex(irm is.gd/idm_reset)</span><br></pre></td></tr></table></figure></blockquote><p>然后打开 <strong>“Windows PowerShell”</strong> (鼠标右键单击左下角<code>Windows</code>图标——点击<code>Windows PowerShell（I)</code> ）并粘贴，如下图所示：<br>     <img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/idm03-40-24.png"><br>弹出窗口时选“2”<br>等待运行完毕。如下图所示：<br><img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/idm1001.png"><br>此时关闭窗口即可。</p><hr><p><img src="https://img.131213.xyz/api/cfile/AgACAgUAAx0Eflp52gACZ_9nqDQJXvw2uAd925TVG6IXuWFKxgACg8sxG5pgQVUSvg-ak85lGgEAAwIAA3cAAzYE" alt="wallhaven-q6w3ml.jpg"></p><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      
        <tags>
            
            <tag> 下载 </tag>
            
            <tag> idm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>零成本搭建个人博客：Hexo + GitHub + Cloudflare</title>
      <link href="/2025/02/01/%E9%9B%B6%E6%88%90%E6%9C%AC%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%9AHexo-GitHub-Cloudflare/"/>
      <url>/2025/02/01/%E9%9B%B6%E6%88%90%E6%9C%AC%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%EF%BC%9AHexo-GitHub-Cloudflare/</url>
      
        <content type="html"><![CDATA[<h1 id="零成本搭建个人博客：Hexo-GitHub-Pages-Cloudflare-Pages"><a href="#零成本搭建个人博客：Hexo-GitHub-Pages-Cloudflare-Pages" class="headerlink" title="零成本搭建个人博客：Hexo + GitHub Pages + Cloudflare Pages"></a>零成本搭建个人博客：Hexo + GitHub Pages + Cloudflare Pages</h1><p>主要内容包括：</p><ul><li>环境准备：安装Node.js和Git</li><li>配置Git和GitHub：设置SSH密钥，创建GitHub仓库</li><li>初始化Hexo项目：安装Hexo，创建新博客</li><li>部署到GitHub Pages：配置部署设置，推送静态文件</li><li>部署到Cloudflare Pages：连接GitHub仓库，自动部署</li><li>基本使用方法：创建新文章，本地预览，发布更新环境准备：安装Node.js和Git</li></ul><hr><h2 id="1-事前准备"><a href="#1-事前准备" class="headerlink" title="1.事前准备"></a>1.事前准备</h2><ol><li>域名（非必须，你也可以使用免费域名，或者GitHub.io或Pages.dev分配的域名也可以）</li><li>GitHub（必须，你需要注册一个GitHub帐号）</li><li>Cloudflare（非必须，你需要注册一个Cloudflare帐号，这样你就可以将博客部署在CF的CDN里加速，但是你也可以直接使用GitHub.io分配的域名）</li></ol><hr><h2 id="2-软件支持"><a href="#2-软件支持" class="headerlink" title="2.软件支持"></a>2.软件支持</h2><ol><li>Node（必须）</li><li>Git（必须）</li><li>VSCode（非必须，这是一款轻量型的代码编辑器，可以帮助你养成一个很好的编程习惯）</li></ol><hr><h3 id="2-1-安装-Node"><a href="#2-1-安装-Node" class="headerlink" title="2.1.安装 Node"></a>2.1.安装 Node</h3><ol><li>打开Node官网，下载和自己系统相配的Node的安装程序，否则会出现安装问题。下载地址：<a href="https://nodejs.org/en">https://nodejs.org/en</a></li><li>下载后安装，安装的目录可以使用默认目录C:&#x2F;Program Files&#x2F;nodejs&#x2F;</li><li>安装完成后，检查是否安装成功。在键盘按下win + R键，输入CMD，然后回车，打开CMD窗口，执行node -v命令，看到版本信息，则说明安装成功。<br><img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke001.jpg"></li><li>修改npm源。npm下载各种模块，默认是从国处服务器下载，速度较慢，建议配置成华为云镜像源。打开CMD窗口，运行如下命令: <figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> registry https://mirrors.huaweicloud.com/repository/npm/</span><br></pre></td></tr></table></figure></li></ol><h3 id="2-2-安装-Git"><a href="#2-2-安装-Git" class="headerlink" title="2.2.安装 Git"></a>2.2.安装 Git</h3><ol><li>进入官网下载适合你当前系统的 Git：<a href="https://git-scm.com/downloads">https://git-scm.com/downloads</a><br><img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke002.png"></li><li>下载后傻瓜式安装Git即可，安装的目录最好使用默认目录<code>C:/Program Files/Git</code></li><li>点击电脑左下角开始即可看见<code>Git CMD</code>、<code>Git Bash</code>、<code>Git GUI</code>。<blockquote><ul><li>Git CMD 是windows 命令行的指令风格</li><li>Git Bash 是linux系统的指令风格（建议使用）</li><li>Git GUI是图形化界面（新手学习不建议使用）</li></ul></blockquote></li></ol><hr><h2 id="3-配置-Git-密钥并连接至-Github"><a href="#3-配置-Git-密钥并连接至-Github" class="headerlink" title="3.配置 Git 密钥并连接至 Github"></a>3.配置 Git 密钥并连接至 Github</h2><p>常用 Git 命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git config -l  //查看所有配置</span><br><span class="line">git config --system --list //查看系统配置</span><br><span class="line">git config --global --list //查看用户（全局）配置</span><br></pre></td></tr></table></figure><p><img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke003.jpg"></p><h3 id="3-1-配置用户名和邮箱"><a href="#3-1-配置用户名和邮箱" class="headerlink" title="3.1. 配置用户名和邮箱"></a>3.1. 配置用户名和邮箱</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;你的用户名&quot;</span><br><span class="line">git config --global user.email &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure><p>通过<code>git config -l </code>检查是否配置成功。<br><img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajiaanboke004.jpg"></p><h3 id="3-2-配置公钥连接Github"><a href="#3-2-配置公钥连接Github" class="headerlink" title="3.2. 配置公钥连接Github"></a>3.2. 配置公钥连接Github</h3><ol><li>执行以下命令生成ssh公钥，此公钥用于你的计算机连接Github  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C &quot;你的邮箱&quot;</span><br></pre></td></tr></table></figure>  提示<code>Enter file in which to save the key</code>直接<strong>一路回车</strong>即可，新手小白不推荐设置密钥<br> <img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke005.jpg"><br>  之后打开C盘下用户文件夹下的.ssh的文件夹，会看到以下文件<blockquote><ul><li><code>id_rsa</code>私钥</li><li><code>id_rsa.pub</code>公钥<br><img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke006.jpg"><br>用记事本打开上述图片中的公钥<code>id_rsa.pub</code>，复制里面的内容，然后开始在github中配置ssh密钥。<br><img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke007.jpg"></li></ul></blockquote></li><li>将 SSH KEY 配置到 GitHub<br>  进入github，点击右上角头像 选择settings，进入设置页后选择 SSH and GPG keys，名字随便起，公钥填到Key那一栏。<blockquote><p><img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke008.jpg"></p></blockquote></li></ol><blockquote><p><img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke009.jpg"></p></blockquote><blockquote><p><img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke010.png"></p></blockquote><blockquote><p><img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke011.png"></p></blockquote><ol start="3"><li>测试连接，输入以下命令 <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure> 第一次连接会提示<code>Are you sure you want to continue connecting (yes/no/[fingerprint])?</code>，输入<code>yes</code>即可<br> <img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke012.png"><br> 出现连接到账户的信息，说明已经大功告成，至此完成了环境准备工作。<br> <img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke013.png"></li></ol><h3 id="3-3-创建GitHub-io仓库"><a href="#3-3-创建GitHub-io仓库" class="headerlink" title="3.3. 创建GitHub.io仓库"></a>3.3. 创建GitHub.io仓库</h3><ol><li>点击右上角的<code>+</code>按钮，选择<strong>New repository</strong>，创建一个<code>&lt;用户名&gt;.github.io</code>的仓库。</li><li>仓库名字的格式必须为：<code>&lt;用户名&gt;.github.io</code> (注意：前缀必须为用户名，此为预览博客需要，后期可修改仓库名)</li><li>可见性必须选择 <code>Public</code> 方便第一次部署检查问题，点击 <strong>Creat repository</strong>进行创建即可<br>  <img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke014.png"></li></ol><hr><h2 id="4-初始化-Hexo-博客"><a href="#4-初始化-Hexo-博客" class="headerlink" title="4.初始化 Hexo 博客"></a>4.初始化 Hexo 博客</h2><ol><li><p>创建一个文件夹来保存博客源码（我这里选的路径为<code>D:/Hexo-Blog</code>），在文件夹内右键鼠标，选择<code>Open Git Bash here</code><br>  <img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke015.png"></p></li><li><p>在<code>Git BASH</code>输入如下命令安装 Hexo</p>  <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo-cli &amp;&amp; hexo -v</span><br></pre></td></tr></table></figure><p>  <img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke016.png"></p></li><li><p>安装完后输入<code>hexo -v</code>验证是否安装成功。<br>  <img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke017.png"></p></li><li><p>初始化 Hexo 项目安装相关依赖。</p>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo init blog-demo</span><br><span class="line">cd blog-demo</span><br><span class="line">npm i</span><br></pre></td></tr></table></figure><p>  <img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke018.png"></p></li><li><p>初始化项目后，<code>blog-demo</code>有如下结构：<br>  <img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke019.png"></p><blockquote><ul><li><strong>node_modules</strong>：<em>依赖包</em></li><li><strong>scaffolds</strong>：<em>生成文章的一些模板</em></li><li><strong>source</strong>：<em>用来存放你的文章</em></li><li><strong>themes</strong>：<em>主题</em></li><li><strong>.npmignore</strong>：<em>发布时忽略的文件（可忽略）</em></li><li><strong>_config.landscape.yml</strong>：<em>主题的配置文件</em></li><li><strong>config.yml</strong>：<em>博客的配置文件</em></li><li><strong>package.json</strong>：<em>项目名称、描述、版本、运行和开发等信</em></li></ul></blockquote></li><li><p>输入<code>hexo cl &amp;&amp; hexo s</code>启动项目<br>  <img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke020.png"></p></li><li><p>打开浏览器，输入地址：<a href="http://localhost:4000/">http://localhost:4000/</a>，看到下面的效果，说明你的博客已经构建成功了。<br>  <img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke021.jpg"></p></li></ol><hr><h2 id="5-将静态博客挂载到-GitHub-Pages"><a href="#5-将静态博客挂载到-GitHub-Pages" class="headerlink" title="5.将静态博客挂载到 GitHub Pages"></a>5.将静态博客挂载到 GitHub Pages</h2><ol><li>安装 hexo-deployer-git  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure></li><li>修改<code> _config.yml</code> 文件<br>  在blog-demo目录下的_config.yml，就是整个Hexo框架的配置文件了。可以在里面修改大部分的配置。详细可参考官方的<a href="https://hexo.io/zh-cn/docs/configuration">配置描述</a>。<br>  修改最后一行的配置，将repository修改为你自己的github项目地址即可，还有分支要改为<code>main</code>代表主分支（注意缩进）。  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:cmliussss2024/cmliussss2024.github.io.git</span><br><span class="line">  branch: main</span><br></pre></td></tr></table></figure></li><li>修改好配置后，运行如下命令，将代码部署到 GitHub（Hexo三连）。  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// Git BASH终端</span><br><span class="line">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy  </span><br><span class="line"></span><br><span class="line">// 或者</span><br><span class="line"></span><br><span class="line">// VSCODE终端</span><br><span class="line">hexo cl; hexo g; hexo d</span><br></pre></td></tr></table></figure><blockquote><ul><li><strong>hexo clean</strong>：删除之前生成的文件，可以用<code>hexo cl</code>缩写。</li><li><strong>hexo generate</strong>：生成静态文章，可以用<code>hexo g</code>缩写</li><li><strong>hexo deploy</strong>：部署文章，可以用<code>hexo d</code>缩写</li></ul></blockquote></li></ol><p>  <img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke022.jpg"><br>     <em>注意：deploy时可能要你输入 username 和 password。</em><br>  如果出现<strong>Deploy done</strong>，则说明部署成功了。<br>  <img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke023.jpg"><br>  稍等两分钟，打开浏览器访问：https:&#x2F;&#x2F;&lt;用户名&gt;.github.io ，这时候我们就可以看到博客内容了。<br>  <img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke024.jpg"></p><hr><h2 id="6-将静态博客挂载到-Cloudflare-Pages"><a href="#6-将静态博客挂载到-Cloudflare-Pages" class="headerlink" title="6.将静态博客挂载到 Cloudflare Pages"></a>6.将静态博客挂载到 Cloudflare Pages</h2><ol><li>在 <code>Workers</code> 和 <code>Pages</code> 中选择 Pages 的 <code>连接到 Git</code><blockquote><p><img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke025.jpg"></p></blockquote></li></ol><blockquote><p><img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke026.jpg"></p></blockquote><ol start="2"><li>然后登录你Blog仓库对应的GitHub帐号<blockquote><p><img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke027.jpg"></p></blockquote></li></ol><blockquote><p><img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke028.jpg"></p></blockquote><ol start="3"><li>点击<code>保存并部署</code>后等待部署完成即可。<br>  <img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke029.jpg"></li><li>提示成功！您的项目已部署到以下区域：全球后，浏览器访问：https:&#x2F;&#x2F;&lt;用户名&gt;-github-io.pages.dev ，这时候我们就可以看到博客内容了。<br>  <img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke030.jpg"><br><em>这时你也就可以将你的<code>&lt;用户名&gt;.github.io</code>的仓库设置为<code>Private</code>私库了</em></li><li>如果你有自己的域名，你可以在这里绑定你自己的自定义域，即可<br>  <img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/dajianboke031.jpg"></li></ol><hr><h2 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h2><h3 id="新建一篇博文"><a href="#新建一篇博文" class="headerlink" title="新建一篇博文"></a>新建一篇博文</h3>  <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new 这是一篇新的博文</span><br></pre></td></tr></table></figure><p>  然后用文本编辑器去编辑<code>_posts/这是一篇新的博文.md</code>里的内容即可，注意要使用<strong>Markdown</strong>格式书写。<br>详细使用方法可以查阅 <a href="https://hexo.io/zh-cn/docs/writing">https://hexo.io/zh-cn/docs/writing</a></p><h3 id="编辑完文章保存后可以使用如下命令，生成本地页面-http-localhost-4000-，进行预览"><a href="#编辑完文章保存后可以使用如下命令，生成本地页面-http-localhost-4000-，进行预览" class="headerlink" title="编辑完文章保存后可以使用如下命令，生成本地页面 http://localhost:4000/ ，进行预览"></a>编辑完文章保存后可以使用如下命令，生成本地页面 <a href="http://localhost:4000/">http://localhost:4000/</a> ，进行预览</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// Git BASH终端</span><br><span class="line">hexo cl &amp;&amp; hexo s</span><br><span class="line"></span><br><span class="line">// 或者</span><br><span class="line"></span><br><span class="line">// VSCODE终端</span><br><span class="line">hexo cl; hexo s</span><br></pre></td></tr></table></figure><h3 id="确认无误后使用以下命令，将本地文章推送至GitHub仓库即可"><a href="#确认无误后使用以下命令，将本地文章推送至GitHub仓库即可" class="headerlink" title="确认无误后使用以下命令，将本地文章推送至GitHub仓库即可"></a>确认无误后使用以下命令，将本地文章推送至GitHub仓库即可</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">// Git BASH终端</span><br><span class="line">hexo cl &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line"></span><br><span class="line">// 或者</span><br><span class="line"></span><br><span class="line">// VSCODE终端</span><br><span class="line">hexo cl; hexo g; hexo d</span><br></pre></td></tr></table></figure><hr><h2 id="VSCODE-终端首次执行报错"><a href="#VSCODE-终端首次执行报错" class="headerlink" title="VSCODE 终端首次执行报错"></a>VSCODE 终端首次执行报错</h2><p>使用管理员身份打开 powershell ,输入以下命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Set-ExecutionPolicy RemoteSigned</span><br></pre></td></tr></table></figure><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> 博客 </tag>
            
            <tag> hexo </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo部署出现错误：Spawn failed解决方法</title>
      <link href="/2025/02/01/hexo%E9%83%A8%E7%BD%B2%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AFSpawn%20failed%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/2025/02/01/hexo%E9%83%A8%E7%BD%B2%E5%87%BA%E7%8E%B0%E9%94%99%E8%AF%AFSpawn%20failed%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h3 id="错误如下："><a href="#错误如下：" class="headerlink" title="错误如下："></a>错误如下：</h3><p><img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/baocuo.png"></p><h3 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h3><blockquote><p>删除blog文件目录下的<code>.deploy_git</code>文件夹<br> 终端命令窗口:<br> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl; hexo g; hexo d</span><br></pre></td></tr></table></figure><br> 完成部署(查看是否成功)</p></blockquote><hr><p><img src="https://img.131213.xyz/api/cfile/AgACAgUAAx0Eflp52gACZEBnnghk8zXOLQZTPB4DJg5pNoOTdgACKsMxG_6J8FSJtTrw4h-o2wEAAwIAA3cAAzYE" alt="wallhaven-dplg8m.jpg"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>IObit Uninstaller PRO 14卸载软件工具</title>
      <link href="/2025/02/01/IObit%20Uninstaller%20PRO%2014%E5%8D%B8%E8%BD%BD%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/"/>
      <url>/2025/02/01/IObit%20Uninstaller%20PRO%2014%E5%8D%B8%E8%BD%BD%E8%BD%AF%E4%BB%B6%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<h2 id="IObit-Uninstaller-PRO-14-Key-–-免费许可证-2025"><a href="#IObit-Uninstaller-PRO-14-Key-–-免费许可证-2025" class="headerlink" title="IObit Uninstaller PRO 14 Key – 免费许可证 2025"></a>IObit Uninstaller PRO 14 Key – 免费许可证 2025</h2><p>IObit Uninstaller PRO 比标准的 Windows 卸载程序工具更强大、更方便，只需单击一下即可删除系统上存在的所有软件。</p><h3 id="下载-IObit-卸载程序-PRO-14"><a href="#下载-IObit-卸载程序-PRO-14" class="headerlink" title="下载 IObit 卸载程序 PRO 14"></a><a href="https://www.iobit.com/en/advanceduninstaller.php?utm_source=enmedia&utm_campaign=eniu_teknobird_3">下载 IObit 卸载程序 PRO 14</a></h3><p><strong>IObit 卸载程序 14 PRO 密钥:</strong><br>您可以从“激活&gt;输入许可证”菜单中将 IObit Uninstaller 14.1 PRO 的许可证代码激活为 PRO 版本。</p><blockquote><p>F8629-D9F0A-87FD4-1CETD (19.06.2025)<br>0033F-AE8A6-5B9DB-36DTD (15.06.2025)<br>5FE5E-27FD1-9217B-389TD (11.05.2025)</p></blockquote><p> （IObit Uninstaller PRO 13 秘钥：2CBB7-715F7-9E5BE-991TC）</p><p>激活后可在”更多设置-我的订阅”中查看激活状态和过期日期。</p><hr><p>赏图时刻<br><img src="https://img.131213.xyz/api/cfile/AgACAgUAAx0Eflp52gACZDZnnbSQXH3sCZhhj-NTJYks17it1QACb8ExG_6J6FTsgtcV8kE2dQEAAwIAA3cAAzYE" alt="o32p97.png"></p><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      <categories>
          
          <category> 软件 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>电脑已连接WiFi但无法上网</title>
      <link href="/2025/01/22/%E7%94%B5%E8%84%91%E5%B7%B2%E8%BF%9E%E6%8E%A5WiFi%E4%BD%86%E6%97%A0%E6%B3%95%E4%B8%8A%E7%BD%91/"/>
      <url>/2025/01/22/%E7%94%B5%E8%84%91%E5%B7%B2%E8%BF%9E%E6%8E%A5WiFi%E4%BD%86%E6%97%A0%E6%B3%95%E4%B8%8A%E7%BD%91/</url>
      
        <content type="html"><![CDATA[<h1 id="电脑已连接WiFi但无法上网解决方法"><a href="#电脑已连接WiFi但无法上网解决方法" class="headerlink" title="电脑已连接WiFi但无法上网解决方法"></a>电脑已连接WiFi但无法上网解决方法</h1><h2 id="一、火绒"><a href="#一、火绒" class="headerlink" title="一、火绒"></a>一、火绒</h2><p>利用火绒进行修复：</p><blockquote><p><strong>打开火绒</strong>–<strong>安全工具</strong>–<strong>网络工具</strong>–<strong>断网修复</strong><br><em>如图所示</em><br><img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/%E7%81%AB%E7%BB%92%E4%BF%AE%E5%A4%8D%E6%96%AD%E7%BD%91.png"></p></blockquote><h2 id="二、系统设置-win10"><a href="#二、系统设置-win10" class="headerlink" title="二、系统设置(win10)"></a>二、系统设置(win10)</h2><p>（可解决浏览器无法联网问题）</p><blockquote><p>依次打开<strong>设置</strong>–<strong>网络和Internet</strong>–<strong>代理</strong>–<strong>关闭使用代理服务器开关</strong> <em>（特殊情况除外）</em></p></blockquote><h2 id="三、网络重置（win11）"><a href="#三、网络重置（win11）" class="headerlink" title="三、网络重置（win11）"></a>三、网络重置（win11）</h2><blockquote><p>win11可尝试使用系统设置中的“重置网络”进行修复。</p></blockquote><hr><p><em>美图欣赏</em><br><img src="https://img.131213.xyz/api/cfile/AgACAgUAAx0Eflp52gACY3NnkQ6itE8RvbUd2CeTf9L5bUcHOAAC68AxG-yWiVSGRBbso1_ADAEAAwIAA3cAAzYE" alt="美图欣赏"></p><div class="video-container">[up主专用，视频内嵌代码贴在这]</div><style>.video-container {    position: relative;    width: 100%;    padding-top: 56.25%; /* 16:9 aspect ratio (height/width = 9/16 * 100%) */}.video-container iframe {    position: absolute;    top: 0;    left: 0;    width: 100%;    height: 100%;}</style>]]></content>
      
      
      
        <tags>
            
            <tag> 网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git连接Github超时的解决方法</title>
      <link href="/2025/01/20/Git%E8%BF%9E%E6%8E%A5Github%E8%B6%85%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/"/>
      <url>/2025/01/20/Git%E8%BF%9E%E6%8E%A5Github%E8%B6%85%E6%97%B6%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="Git连接Github超时的解决方法"><a href="#Git连接Github超时的解决方法" class="headerlink" title="Git连接Github超时的解决方法"></a>Git连接Github超时的解决方法</h1><p>将密钥配置到GitHub上后，输入以下命令进行验证：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>(或者向github进行推送时，连接超时，推送失败等情况)</p><p>显示连接超时。可尝试如下方法：</p><blockquote><p>1.首先把文件拓展名隐藏取消勾选；<br>2.找到公钥私钥所在的文件夹(一般为<strong>C盘</strong>-<strong>用户</strong>-<strong>.ssh</strong>)<br>3.我们需要在这个文件夹下新建一个名为config的文件，<strong>不带后缀(重命名删除后缀就行)</strong></p><blockquote><p><em>（正常情况下打开应该只有id_rsa和id_rsa.pub，这个不用担心）</em></p></blockquote></blockquote><p><img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/%E6%96%B0%E5%BB%BA%E4%B8%80%E4%B8%AA%E5%90%8D%E4%B8%BAconfig%E7%9A%84%E6%96%87%E4%BB%B6.png" alt="新建一个名为config的文件"></p><blockquote><p>4.将下面的内容用记事本打开复制到config文件中并保存，其中邮箱换成自己上面填的：</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Host github.com</span><br><span class="line">User xxx@163.com</span><br><span class="line">Hostname ssh.github.com</span><br><span class="line">PreferredAuthentications publickey</span><br><span class="line">IdentityFile ~/.ssh/id_rsa</span><br><span class="line">Port 443</span><br></pre></td></tr></table></figure><p><em>如下图所示</em>：<br><img src="https://pub-696fe86c66344c6cbbf36f42b5b84c33.r2.dev/%E7%B2%98%E8%B4%B4%E5%86%85%E5%AE%B9.png"></p><hr><p>完成以上操作后，再次尝试使用验证：</p><blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ssh -T git@github.com</span><br></pre></td></tr></table></figure></blockquote><p>此时，查看是否能成功验证或者推送。</p>]]></content>
      
      
      
        <tags>
            
            <tag> git </tag>
            
            <tag> github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2025/01/20/hello-world/"/>
      <url>/2025/01/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
